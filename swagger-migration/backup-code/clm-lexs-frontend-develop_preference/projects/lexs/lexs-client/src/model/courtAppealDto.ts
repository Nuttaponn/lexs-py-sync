/**
 * KTB Backend for Frontend APIs.
 *
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { LitigationDocumentDto } from './litigationDocumentDto';


export interface CourtAppealDto { 
    appealDescription?: string;
    appealDueDate?: string;
    appealPurpose?: CourtAppealDto.AppealPurposeEnum;
    approveDate?: string;
    approverDecision?: CourtAppealDto.ApproverDecisionEnum;
    approverRemark?: string;
    bankRemark?: string;
    conditionalAppeal?: CourtAppealDto.ConditionalAppealEnum;
    conditionalRemark?: string;
    courtAppealDocuments?: Array<LitigationDocumentDto>;
    dayToAppealDueDate?: number;
    deductionForGuarantor?: boolean;
    finishedAppeal?: boolean;
    /**
     * Header Flag // DRAFT,SUBMIT
     */
    headerFlag: CourtAppealDto.HeaderFlagEnum;
    litigationCaseId?: number;
    litigationId?: string;
    rejectReason?: string;
    /**
     * A / U / D
     */
    updateFlag?: CourtAppealDto.UpdateFlagEnum;
}
export namespace CourtAppealDto {
    export type AppealPurposeEnum = 'REQUEST_APPEAL' | 'STOP_APPEAL' | 'KTB_LAW_STOP_APPEAL' | 'REQUEST_PETITION' | 'STOP_PETITION' | 'KTB_LAW_STOP_PETITION';
    export const AppealPurposeEnum = {
        RequestAppeal: 'REQUEST_APPEAL' as AppealPurposeEnum,
        StopAppeal: 'STOP_APPEAL' as AppealPurposeEnum,
        KtbLawStopAppeal: 'KTB_LAW_STOP_APPEAL' as AppealPurposeEnum,
        RequestPetition: 'REQUEST_PETITION' as AppealPurposeEnum,
        StopPetition: 'STOP_PETITION' as AppealPurposeEnum,
        KtbLawStopPetition: 'KTB_LAW_STOP_PETITION' as AppealPurposeEnum
    };
    export type ApproverDecisionEnum = 'TO_APPEAL' | 'TO_STOP_APPEAL' | 'CONDITIONAL_APPEAL' | 'TO_PETITION' | 'TO_STOP_PETITION' | 'CONDITIONAL_PETITION';
    export const ApproverDecisionEnum = {
        ToAppeal: 'TO_APPEAL' as ApproverDecisionEnum,
        ToStopAppeal: 'TO_STOP_APPEAL' as ApproverDecisionEnum,
        ConditionalAppeal: 'CONDITIONAL_APPEAL' as ApproverDecisionEnum,
        ToPetition: 'TO_PETITION' as ApproverDecisionEnum,
        ToStopPetition: 'TO_STOP_PETITION' as ApproverDecisionEnum,
        ConditionalPetition: 'CONDITIONAL_PETITION' as ApproverDecisionEnum
    };
    export type ConditionalAppealEnum = 'APPEAL' | 'STOP_APPEAL' | 'PETITION' | 'STOP_PETITION';
    export const ConditionalAppealEnum = {
        Appeal: 'APPEAL' as ConditionalAppealEnum,
        StopAppeal: 'STOP_APPEAL' as ConditionalAppealEnum,
        Petition: 'PETITION' as ConditionalAppealEnum,
        StopPetition: 'STOP_PETITION' as ConditionalAppealEnum
    };
    export type HeaderFlagEnum = 'DRAFT' | 'SUBMIT' | 'APPROVE' | 'REJECT' | 'CANCEL' | 'DELETE' | 'UPDATE' | 'SUBMIT1' | 'SUBMIT2' | 'SAVE';
    export const HeaderFlagEnum = {
        Draft: 'DRAFT' as HeaderFlagEnum,
        Submit: 'SUBMIT' as HeaderFlagEnum,
        Approve: 'APPROVE' as HeaderFlagEnum,
        Reject: 'REJECT' as HeaderFlagEnum,
        Cancel: 'CANCEL' as HeaderFlagEnum,
        Delete: 'DELETE' as HeaderFlagEnum,
        Update: 'UPDATE' as HeaderFlagEnum,
        Submit1: 'SUBMIT1' as HeaderFlagEnum,
        Submit2: 'SUBMIT2' as HeaderFlagEnum,
        Save: 'SAVE' as HeaderFlagEnum
    };
    export type UpdateFlagEnum = 'A' | 'U' | 'D';
    export const UpdateFlagEnum = {
        A: 'A' as UpdateFlagEnum,
        U: 'U' as UpdateFlagEnum,
        D: 'D' as UpdateFlagEnum
    };
}


